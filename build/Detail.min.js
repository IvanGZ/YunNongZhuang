/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(11);
	module.exports = __webpack_require__(13);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 5 */,
/* 6 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*
	 * APICloud JavaScript Library
	 * Copyright (c) 2014 apicloud.com
	 */
	(function (window) {
	    var u = {};
	    var isAndroid = /android/gi.test(navigator.appVersion);
	    var uzStorage = function uzStorage() {
	        var ls = window.localStorage;
	        if (isAndroid) {
	            ls = os.localStorage();
	        }
	        return ls;
	    };
	    function parseArguments(url, data, fnSuc, dataType) {
	        if (typeof data == 'function') {
	            dataType = fnSuc;
	            fnSuc = data;
	            data = undefined;
	        }
	        if (typeof fnSuc != 'function') {
	            dataType = fnSuc;
	            fnSuc = undefined;
	        }
	        return {
	            url: url,
	            data: data,
	            fnSuc: fnSuc,
	            dataType: dataType
	        };
	    }
	    u.trim = function (str) {
	        if (String.prototype.trim) {
	            return str == null ? "" : String.prototype.trim.call(str);
	        } else {
	            return str.replace(/(^\s*)|(\s*$)/g, "");
	        }
	    };
	    u.trimAll = function (str) {
	        return str.replace(/\s*/g, '');
	    };
	    u.isElement = function (obj) {
	        return !!(obj && obj.nodeType == 1);
	    };
	    u.isArray = function (obj) {
	        if (Array.isArray) {
	            return Array.isArray(obj);
	        } else {
	            return obj instanceof Array;
	        }
	    };
	    u.isEmptyObject = function (obj) {
	        if (JSON.stringify(obj) === '{}') {
	            return true;
	        }
	        return false;
	    };
	    u.addEvt = function (el, name, fn, useCapture) {
	        if (!u.isElement(el)) {
	            console.warn('$api.addEvt Function need el param, el param must be DOM Element');
	            return;
	        }
	        useCapture = useCapture || false;
	        if (el.addEventListener) {
	            el.addEventListener(name, fn, useCapture);
	        }
	    };
	    u.rmEvt = function (el, name, fn, useCapture) {
	        if (!u.isElement(el)) {
	            console.warn('$api.rmEvt Function need el param, el param must be DOM Element');
	            return;
	        }
	        useCapture = useCapture || false;
	        if (el.removeEventListener) {
	            el.removeEventListener(name, fn, useCapture);
	        }
	    };
	    u.one = function (el, name, fn, useCapture) {
	        if (!u.isElement(el)) {
	            console.warn('$api.one Function need el param, el param must be DOM Element');
	            return;
	        }
	        useCapture = useCapture || false;
	        var that = this;
	        var cb = function cb() {
	            fn && fn();
	            that.rmEvt(el, name, cb, useCapture);
	        };
	        that.addEvt(el, name, cb, useCapture);
	    };
	    u.dom = function (el, selector) {
	        if (arguments.length === 1 && typeof arguments[0] == 'string') {
	            if (document.querySelector) {
	                return document.querySelector(arguments[0]);
	            }
	        } else if (arguments.length === 2) {
	            if (el.querySelector) {
	                return el.querySelector(selector);
	            }
	        }
	    };
	    u.domAll = function (el, selector) {
	        if (arguments.length === 1 && typeof arguments[0] == 'string') {
	            if (document.querySelectorAll) {
	                return document.querySelectorAll(arguments[0]);
	            }
	        } else if (arguments.length === 2) {
	            if (el.querySelectorAll) {
	                return el.querySelectorAll(selector);
	            }
	        }
	    };
	    u.byId = function (id) {
	        return document.getElementById(id);
	    };
	    u.first = function (el, selector) {
	        if (arguments.length === 1) {
	            if (!u.isElement(el)) {
	                console.warn('$api.first Function need el param, el param must be DOM Element');
	                return;
	            }
	            return el.children[0];
	        }
	        if (arguments.length === 2) {
	            return this.dom(el, selector + ':first-child');
	        }
	    };
	    u.last = function (el, selector) {
	        if (arguments.length === 1) {
	            if (!u.isElement(el)) {
	                console.warn('$api.last Function need el param, el param must be DOM Element');
	                return;
	            }
	            var children = el.children;
	            return children[children.length - 1];
	        }
	        if (arguments.length === 2) {
	            return this.dom(el, selector + ':last-child');
	        }
	    };
	    u.eq = function (el, index) {
	        return this.dom(el, ':nth-child(' + index + ')');
	    };
	    u.not = function (el, selector) {
	        return this.domAll(el, ':not(' + selector + ')');
	    };
	    u.prev = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.prev Function need el param, el param must be DOM Element');
	            return;
	        }
	        var node = el.previousSibling;
	        if (node.nodeType && node.nodeType === 3) {
	            node = node.previousSibling;
	            return node;
	        }
	    };
	    u.next = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.next Function need el param, el param must be DOM Element');
	            return;
	        }
	        var node = el.nextSibling;
	        if (node.nodeType && node.nodeType === 3) {
	            node = node.nextSibling;
	            return node;
	        }
	    };
	    u.closest = function (el, selector) {
	        if (!u.isElement(el)) {
	            console.warn('$api.closest Function need el param, el param must be DOM Element');
	            return;
	        }
	        var doms, targetDom;
	        var isSame = function isSame(doms, el) {
	            var i = 0,
	                len = doms.length;
	            for (i; i < len; i++) {
	                if (doms[i].isEqualNode(el)) {
	                    return doms[i];
	                }
	            }
	            return false;
	        };
	        var traversal = function traversal(el, selector) {
	            doms = u.domAll(el.parentNode, selector);
	            targetDom = isSame(doms, el);
	            while (!targetDom) {
	                el = el.parentNode;
	                if (el != null && el.nodeType == el.DOCUMENT_NODE) {
	                    return false;
	                }
	                traversal(el, selector);
	            }
	
	            return targetDom;
	        };
	
	        return traversal(el, selector);
	    };
	    u.contains = function (parent, el) {
	        var mark = false;
	        if (el === parent) {
	            mark = true;
	            return mark;
	        } else {
	            do {
	                el = el.parentNode;
	                if (el === parent) {
	                    mark = true;
	                    return mark;
	                }
	            } while (el === document.body || el === document.documentElement);
	
	            return mark;
	        }
	    };
	    u.remove = function (el) {
	        if (el && el.parentNode) {
	            el.parentNode.removeChild(el);
	        }
	    };
	    u.attr = function (el, name, value) {
	        if (!u.isElement(el)) {
	            console.warn('$api.attr Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length == 2) {
	            return el.getAttribute(name);
	        } else if (arguments.length == 3) {
	            el.setAttribute(name, value);
	            return el;
	        }
	    };
	    u.removeAttr = function (el, name) {
	        if (!u.isElement(el)) {
	            console.warn('$api.removeAttr Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 2) {
	            el.removeAttribute(name);
	        }
	    };
	    u.hasCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.hasCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (el.className.indexOf(cls) > -1) {
	            return true;
	        } else {
	            return false;
	        }
	    };
	    u.addCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.addCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if ('classList' in el) {
	            el.classList.add(cls);
	        } else {
	            var preCls = el.className;
	            var newCls = preCls + ' ' + cls;
	            el.className = newCls;
	        }
	        return el;
	    };
	    u.removeCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.removeCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if ('classList' in el) {
	            el.classList.remove(cls);
	        } else {
	            var preCls = el.className;
	            var newCls = preCls.replace(cls, '');
	            el.className = newCls;
	        }
	        return el;
	    };
	    u.toggleCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.toggleCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if ('classList' in el) {
	            el.classList.toggle(cls);
	        } else {
	            if (u.hasCls(el, cls)) {
	                u.removeCls(el, cls);
	            } else {
	                u.addCls(el, cls);
	            }
	        }
	        return el;
	    };
	    u.val = function (el, val) {
	        if (!u.isElement(el)) {
	            console.warn('$api.val Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 1) {
	            switch (el.tagName) {
	                case 'SELECT':
	                    var value = el.options[el.selectedIndex].value;
	                    return value;
	                    break;
	                case 'INPUT':
	                    return el.value;
	                    break;
	                case 'TEXTAREA':
	                    return el.value;
	                    break;
	            }
	        }
	        if (arguments.length === 2) {
	            switch (el.tagName) {
	                case 'SELECT':
	                    el.options[el.selectedIndex].value = val;
	                    return el;
	                    break;
	                case 'INPUT':
	                    el.value = val;
	                    return el;
	                    break;
	                case 'TEXTAREA':
	                    el.value = val;
	                    return el;
	                    break;
	            }
	        }
	    };
	    u.prepend = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.prepend Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('afterbegin', html);
	        return el;
	    };
	    u.append = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.append Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('beforeend', html);
	        return el;
	    };
	    u.before = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.before Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('beforebegin', html);
	        return el;
	    };
	    u.after = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.after Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('afterend', html);
	        return el;
	    };
	    u.html = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.html Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 1) {
	            return el.innerHTML;
	        } else if (arguments.length === 2) {
	            el.innerHTML = html;
	            return el;
	        }
	    };
	    u.text = function (el, txt) {
	        if (!u.isElement(el)) {
	            console.warn('$api.text Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 1) {
	            return el.textContent;
	        } else if (arguments.length === 2) {
	            el.textContent = txt;
	            return el;
	        }
	    };
	    u.offset = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.offset Function need el param, el param must be DOM Element');
	            return;
	        }
	        var sl = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);
	        var st = Math.max(document.documentElement.scrollTop, document.body.scrollTop);
	
	        var rect = el.getBoundingClientRect();
	        return {
	            l: rect.left + sl,
	            t: rect.top + st,
	            w: el.offsetWidth,
	            h: el.offsetHeight
	        };
	    };
	    u.css = function (el, css) {
	        if (!u.isElement(el)) {
	            console.warn('$api.css Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (typeof css == 'string' && css.indexOf(':') > 0) {
	            el.style && (el.style.cssText += ';' + css);
	        }
	    };
	    u.cssVal = function (el, prop) {
	        if (!u.isElement(el)) {
	            console.warn('$api.cssVal Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 2) {
	            var computedStyle = window.getComputedStyle(el, null);
	            return computedStyle.getPropertyValue(prop);
	        }
	    };
	    u.jsonToStr = function (json) {
	        if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object') {
	            return JSON && JSON.stringify(json);
	        }
	    };
	    u.strToJson = function (str) {
	        if (typeof str === 'string') {
	            return JSON && JSON.parse(str);
	        }
	    };
	    u.setStorage = function (key, value) {
	        if (arguments.length === 2) {
	            var v = value;
	            if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) == 'object') {
	                v = JSON.stringify(v);
	                v = 'obj-' + v;
	            } else {
	                v = 'str-' + v;
	            }
	            var ls = uzStorage();
	            if (ls) {
	                ls.setItem(key, v);
	            }
	        }
	    };
	    u.getStorage = function (key) {
	        var ls = uzStorage();
	        if (ls) {
	            var v = ls.getItem(key);
	            if (!v) {
	                return;
	            }
	            if (v.indexOf('obj-') === 0) {
	                v = v.slice(4);
	                return JSON.parse(v);
	            } else if (v.indexOf('str-') === 0) {
	                return v.slice(4);
	            }
	        }
	    };
	    u.rmStorage = function (key) {
	        var ls = uzStorage();
	        if (ls && key) {
	            ls.removeItem(key);
	        }
	    };
	    u.clearStorage = function () {
	        var ls = uzStorage();
	        if (ls) {
	            ls.clear();
	        }
	    };
	
	    /*by king*/
	    u.fixIos7Bar = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.fixIos7Bar Function need el param, el param must be DOM Element');
	            return;
	        }
	        var strDM = api.systemType;
	        if (strDM == 'ios') {
	            var strSV = api.systemVersion;
	            var numSV = parseInt(strSV, 10);
	            var fullScreen = api.fullScreen;
	            var iOS7StatusBarAppearance = api.iOS7StatusBarAppearance;
	            if (numSV >= 7 && !fullScreen && iOS7StatusBarAppearance) {
	                el.style.paddingTop = '20px';
	            }
	        }
	    };
	    u.fixStatusBar = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.fixStatusBar Function need el param, el param must be DOM Element');
	            return;
	        }
	        var sysType = api.systemType;
	        if (sysType == 'ios') {
	            u.fixIos7Bar(el);
	        } else if (sysType == 'android') {
	            var ver = api.systemVersion;
	            ver = parseFloat(ver);
	            if (ver >= 4.4) {
	                el.style.paddingTop = '25px';
	            }
	        }
	    };
	    u.toast = function (title, text, time) {
	        var opts = {};
	        var show = function show(opts, time) {
	            api.showProgress(opts);
	            setTimeout(function () {
	                api.hideProgress();
	            }, time);
	        };
	        if (arguments.length === 1) {
	            var time = time || 500;
	            if (typeof title === 'number') {
	                time = title;
	            } else {
	                opts.title = title + '';
	            }
	            show(opts, time);
	        } else if (arguments.length === 2) {
	            var time = time || 500;
	            var text = text;
	            if (typeof text === "number") {
	                var tmp = text;
	                time = tmp;
	                text = null;
	            }
	            if (title) {
	                opts.title = title;
	            }
	            if (text) {
	                opts.text = text;
	            }
	            show(opts, time);
	        }
	        if (title) {
	            opts.title = title;
	        }
	        if (text) {
	            opts.text = text;
	        }
	        time = time || 500;
	        show(opts, time);
	    };
	    u.post = function () /*url,data,fnSuc,dataType*/{
	        var argsToJson = parseArguments.apply(null, arguments);
	        var json = {};
	        var fnSuc = argsToJson.fnSuc;
	        argsToJson.url && (json.url = argsToJson.url);
	        argsToJson.data && (json.data = argsToJson.data);
	        if (argsToJson.dataType) {
	            var type = argsToJson.dataType.toLowerCase();
	            if (type == 'text' || type == 'json') {
	                json.dataType = type;
	            }
	        } else {
	            json.dataType = 'json';
	        }
	        json.method = 'post';
	        api.ajax(json, function (ret, err) {
	            if (ret) {
	                fnSuc && fnSuc(ret);
	            }
	        });
	    };
	    u.get = function () /*url,fnSuc,dataType*/{
	        var argsToJson = parseArguments.apply(null, arguments);
	        var json = {};
	        var fnSuc = argsToJson.fnSuc;
	        argsToJson.url && (json.url = argsToJson.url);
	        //argsToJson.data && (json.data = argsToJson.data);
	        if (argsToJson.dataType) {
	            var type = argsToJson.dataType.toLowerCase();
	            if (type == 'text' || type == 'json') {
	                json.dataType = type;
	            }
	        } else {
	            json.dataType = 'text';
	        }
	        json.method = 'get';
	        api.ajax(json, function (ret, err) {
	            if (ret) {
	                fnSuc && fnSuc(ret);
	            }
	        });
	    };
	
	    /*end*/
	
	    window.$api = u;
	})(window);

/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Created by a123 on 17/2/13.
	 */
	
	/*url*/
	// YNZapi = 'http://nz.lekongyun.com/Shop/api';
	//YNZ = 'http://nz.lekongyun.com';
	var YNZapi = 'http://ynz.lekongyun.com/api';
	var YNZ = 'http://ynz.lekongyun.com/';
	/*cookies*/
	function getCookie(cname) {
	    var name = cname + "=";
	    var ca = document.cookie.split(';');
	    for (var i = 0; i < ca.length; i++) {
	        var c = ca[i];
	        while (c.charAt(0) == ' ') {
	            c = c.substring(1);
	        }if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
	    }
	    return "";
	}
	
	module.exports = {
	    getCookie: getCookie,
	    YNZapi: YNZapi,
	    YNZ: YNZ
	};

/***/ },
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(12);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/.0.26.2@css-loader/index.js?sourceMap!./Detail.css", function() {
				var newContent = require("!!../../node_modules/.0.26.2@css-loader/index.js?sourceMap!./Detail.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports
	
	
	// module
	exports.push([module.id, "body{font-family: \"Microsoft YaHei UI\";padding-bottom: 50px;}\n/*头部*/\n.header{position: fixed;top:0;z-index: 5;background: #f8f8f8;z-index: 100!important;}\n.empty{height: 2.25rem;}\n.aui-slide-page-wrap{z-index: 99!important;}\n/*商品内容*/\n.price{color: orangered;}\n.payment{font-size: 1.4rem;}\n.goods_name{font-size: 1rem!important;}\n.goodsInfo{font-size: .8rem!important;}\n.shopName{font-size: .8rem!important;}\n.store_count{font-size: .8rem!important;}\n.phoneIconContent{position: relative;}\n.phoneIcon{width: 36px;height: 36px;position: absolute;bottom: 5px;z-index: 1}\n.tel{display: inline-block;width: 36px;height: 36px;position: relative;bottom: 0;z-index: 2;}\n/*打电话，商家信息按钮*/\n.middleBtn{z-index: 4!important;}\n.btn{border-bottom: none;border-top: none;background: white;border-right-color: #a1a1a1;}\n/*详情*/\n.detailTitle{font-size: .8rem}\n.detail img{width: 100%}\n.redBar{width: 5px!important;height: 42px!important;float: left;margin-top: 2px;margin-right: 15px;}\n.listItem{padding: 0!important;}\n.listTitle{line-height: 44px;}\n/*截图*/\n.screenshot{margin-top: 6px;margin-right: 10px;background-color: #9ccc65;color: white;}\n.screenImg{width: 100%}\n.aui-dialog-btn{color: #9ccc65}\n/*商家信息*/\n.shopContent{border-top:1px solid #cfcfcf;border-radius: 0!important;}\n/*#top{width: 100%;left:0;margin-left: 0;}*/\n.shopNamePopup{font-size: .8rem;color: #000}\n.shopAddress, .shopGoodsTotal{color: #999}\n.img{height: 100%}\n.shopPopup{height: 5.5rem;padding: 0.5rem;position: relative}\n.shop-image{width: 4.5rem;height: 3rem;position: absolute;bottom: 1.5rem;left: 1rem;}\n.shop-info{width: 10rem;height: 3rem;position: absolute;bottom: 1.5rem;right: 0.5rem}\n/*底部订购*/\n#footer{padding: .5rem 0 0 0;color: white;background: #9ccc65;z-index: 4}\n/*详情，属性*/\n.aui-tab-item.aui-active{color: #9ccc65;border-bottom: 2px solid #9ccc65; }", "", {"version":3,"sources":["/./List/Detail/Detail.css"],"names":[],"mappings":"AAAA,KAAK,kCAAkC,qBAAqB,CAAC;AAC7D,MAAM;AACN,QAAQ,gBAAgB,MAAM,WAAW,oBAAoB,uBAAuB,CAAC;AACrF,OAAO,gBAAgB,CAAC;AACxB,qBAAqB,sBAAsB,CAAC;AAC5C,QAAQ;AACR,OAAO,iBAAiB,CAAC;AACzB,SAAS,kBAAkB,CAAC;AAC5B,YAAY,0BAA0B,CAAC;AACvC,WAAW,2BAA2B,CAAC;AACvC,UAAU,2BAA2B,CAAC;AACtC,aAAa,2BAA2B,CAAC;AACzC,kBAAkB,mBAAmB,CAAC;AACtC,WAAW,YAAY,aAAa,mBAAmB,YAAY,UAAU,CAAC;AAC9E,KAAK,sBAAsB,YAAY,aAAa,mBAAmB,UAAU,WAAW,CAAC;AAC7F,cAAc;AACd,WAAW,qBAAqB,CAAC;AACjC,KAAK,oBAAoB,iBAAiB,kBAAkB,4BAA4B,CAAC;AACzF,MAAM;AACN,aAAa,gBAAgB,CAAC;AAC9B,YAAY,WAAW,CAAC;AACxB,QAAQ,qBAAqB,uBAAuB,YAAY,gBAAgB,mBAAmB,CAAC;AACpG,UAAU,qBAAqB,CAAC;AAChC,WAAW,kBAAkB,CAAC;AAC9B,MAAM;AACN,YAAY,gBAAgB,mBAAmB,0BAA0B,aAAa,CAAC;AACvF,WAAW,WAAW,CAAC;AACvB,gBAAgB,cAAc,CAAC;AAC/B,QAAQ;AACR,aAAa,6BAA6B,2BAA2B,CAAC;AACtE,4CAA4C;AAC5C,eAAe,iBAAiB,WAAW,CAAC;AAC5C,8BAA8B,WAAW,CAAC;AAC1C,KAAK,YAAY,CAAC;AAClB,WAAW,eAAe,gBAAgB,kBAAkB,CAAC;AAC7D,YAAY,cAAc,aAAa,mBAAmB,eAAe,WAAW,CAAC;AACrF,WAAW,aAAa,aAAa,mBAAmB,eAAe,aAAa,CAAC;AACrF,QAAQ;AACR,QAAQ,qBAAqB,aAAa,oBAAoB,UAAU,CAAC;AACzE,SAAS;AACT,yBAAyB,eAAe,iCAAiC,EAAE","file":"Detail.css","sourcesContent":["body{font-family: \"Microsoft YaHei UI\";padding-bottom: 50px;}\n/*头部*/\n.header{position: fixed;top:0;z-index: 5;background: #f8f8f8;z-index: 100!important;}\n.empty{height: 2.25rem;}\n.aui-slide-page-wrap{z-index: 99!important;}\n/*商品内容*/\n.price{color: orangered;}\n.payment{font-size: 1.4rem;}\n.goods_name{font-size: 1rem!important;}\n.goodsInfo{font-size: .8rem!important;}\n.shopName{font-size: .8rem!important;}\n.store_count{font-size: .8rem!important;}\n.phoneIconContent{position: relative;}\n.phoneIcon{width: 36px;height: 36px;position: absolute;bottom: 5px;z-index: 1}\n.tel{display: inline-block;width: 36px;height: 36px;position: relative;bottom: 0;z-index: 2;}\n/*打电话，商家信息按钮*/\n.middleBtn{z-index: 4!important;}\n.btn{border-bottom: none;border-top: none;background: white;border-right-color: #a1a1a1;}\n/*详情*/\n.detailTitle{font-size: .8rem}\n.detail img{width: 100%}\n.redBar{width: 5px!important;height: 42px!important;float: left;margin-top: 2px;margin-right: 15px;}\n.listItem{padding: 0!important;}\n.listTitle{line-height: 44px;}\n/*截图*/\n.screenshot{margin-top: 6px;margin-right: 10px;background-color: #9ccc65;color: white;}\n.screenImg{width: 100%}\n.aui-dialog-btn{color: #9ccc65}\n/*商家信息*/\n.shopContent{border-top:1px solid #cfcfcf;border-radius: 0!important;}\n/*#top{width: 100%;left:0;margin-left: 0;}*/\n.shopNamePopup{font-size: .8rem;color: #000}\n.shopAddress, .shopGoodsTotal{color: #999}\n.img{height: 100%}\n.shopPopup{height: 5.5rem;padding: 0.5rem;position: relative}\n.shop-image{width: 4.5rem;height: 3rem;position: absolute;bottom: 1.5rem;left: 1rem;}\n.shop-info{width: 10rem;height: 3rem;position: absolute;bottom: 1.5rem;right: 0.5rem}\n/*底部订购*/\n#footer{padding: .5rem 0 0 0;color: white;background: #9ccc65;z-index: 4}\n/*详情，属性*/\n.aui-tab-item.aui-active{color: #9ccc65;border-bottom: 2px solid #9ccc65; }"],"sourceRoot":"webpack://"}]);
	
	// exports


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	/**
	 * Created by a123 on 17/1/18.
	 */
	__webpack_require__(6);
	__webpack_require__(14); /*轮播*/
	__webpack_require__(15);
	__webpack_require__(16); /*弹框*/
	__webpack_require__(17); /*dialog*/
	var commom = __webpack_require__(7);
	
	var YNZapi = commom.YNZapi;
	var YNZ = commom.YNZ;
	
	$(document).ready(function () {
	    /*处理前一个页面带的参数*/
	    function GetQueryString(name) {
	        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
	        var r = window.location.search.substr(1).match(reg);
	        if (r != null) return decodeURI(r[2]);return null;
	    }
	    var id = GetQueryString("id");
	    //alert(id);
	
	    /*弹出菜菜单*/
	    var popup = new auiPopup();
	    function showPopup() {
	        popup.show(document.getElementById("top"));
	    }
	
	    /*tab菜单*/
	    var tab = new auiTab({
	        element: document.getElementById("tab"),
	        index: 1,
	        repeatClick: false
	    }, function (ret) {
	        if (ret.index == 1) {
	            $(".detail").removeClass("aui-hide");
	            $(".parameter").addClass("aui-hide");
	        }
	        if (ret.index == 2) {
	            $(".detail").addClass("aui-hide");
	            $(".parameter").removeClass("aui-hide");
	        }
	    });
	
	    /*底部订购跳转*/
	    $("#footer").on('click', function () {
	        window.location.href = '../../Order/Order.html?id=' + id;
	    });
	
	    /*获取截图*/
	    $(".screenshot").on('click', function () {
	        $.ajax({
	            type: "POST",
	            contentType: "application/json;utf-8",
	            url: "http://120.77.182.79/LCService/LCService.asmx/GetDeviceSnap",
	            data: "{parm : 'appId=lc1b9757f83d3b4b9d&appSecret=c8c20d647e6d4400865598f37dfebf&phone=18588864504&deviceId=2M03982PAD01662&channelId=0'}",
	            dataType: 'json',
	            success: function success(result) {
	                var src = result.d;
	                // var img = "<img src='"+result.d+"' class='screenImg'>";
	
	
	                var getImage = function getImage() {
	                    var img = $("<img />").attr('src', src).addClass('screenImg').on('error', function () {
	                        img.remove();
	                        setTimeout(function () {
	                            getImage();
	                        }, 300);
	                    }).on('load', function () {
	                        //$(".goods_name").append(img);
	
	                        var canvas = document.getElementById('canvas');
	                        var ctx = canvas.getContext('2d');
	                        console.log('Painting image...');
	                        ctx.drawImage(img[0], 0, 0);
	                        console.log('Attempting to get image data');
	                        try {
	                            var data = ctx.getImageData(0, 0, canvas.width, canvas.height);
	                            console.log('Success!', data);
	                        } catch (e) {
	                            console.log(e);
	                        }
	
	                        // $.ajax(src).done(function (data) {
	                        //     console.log(data)
	                        // })
	                    });
	                };
	                getImage();
	
	                var dialog = new auiDialog({});
	                window.openDialog = function () {
	                    $("#video1").css('display', 'none');
	                    if (result.d == '') {
	                        var content = "加载中...";
	                    } else {
	                        var content = "<img src='" + result.d + "' class='screenImg'>";
	                    }
	                    dialog.alert({
	                        title: "当前截图",
	                        msg: content,
	                        buttons: ['取消', '长按图片保存']
	                    }, function (ret) {
	                        $("#video1").css('display', 'block');
	                        console.log(ret);
	                    });
	                };
	            }
	        });
	    });
	
	    /*获取商品信息*/
	    $.ajax({
	        type: 'GET',
	        url: YNZapi + '/goods/' + id,
	        dataType: 'json',
	        success: function success(data) {
	            if (data.code == 0) {
	                var result = data.result;
	                console.log(result);
	                var goodsId = result['goodsId']; //商品ID
	                var goods_name = result['goodsName']; //商品名称
	                var seller_id = result['shopId']; //店铺ID
	                var img_url = result['gallery']; //图片
	                var shop_price = result['shopPrice']; //商品价格
	                var sales_sum = result['saleNum']; //销量
	                var store_count = result['goodsStock']; //库存
	                var goodsUnit = result['goodsUnit']; //单位
	                var score = result['score']; //评分
	                var cmt_count = result['cmt_count']; //评价数量
	                var goodsDesc = result['goodsDesc']; //商品详情
	                var shopName = result['shop']['shopName']; //店铺名
	                var shopTel = result['shop']['shopTel']; //店铺电话
	                var shopImg = YNZ + result['shop']['shopImg']; //店铺图片
	                var shopAddress = result['shop']['shopAddress']; //店铺地址
	                var shopGoodsTotal = result['shopGoodsTotal']; //店铺商品量
	
	                var cacheVideo = YNZ + result['cacheVideo']; //延时视频缓存
	                var video = result['video']; //直播视频链接
	                var videoImg = YNZ + result['videoImg']; //视频图片
	
	
	                $(".goods_name").text(goods_name);
	                $(".goodsUnit").text(goodsUnit);
	                $(".store_count").text("库存" + store_count + goodsUnit);
	                $(".payment").text("￥" + shop_price);
	                $(".sales_sum").text(sales_sum);
	                $(".shopName").text(shopName);
	                /*弹窗*/
	                $(".logo").attr('src', shopImg);
	                $(".shopNamePopup").text(shopName);
	                $(".shopAddress").text("地址：" + shopAddress);
	                $(".shopGoodsTotal").text("商品量：" + shopGoodsTotal);
	
	                if (video) {
	                    $("#video1").attr('src', video); //直播视频链接
	                    $("#video1").attr('poster', videoImg); //视频图片
	                } else {
	                    $(".video1UL").remove();
	                    $("#video1").remove();
	                }
	
	                if (result['cacheVideo'] == null) {
	                    $(".video2UL").remove();
	                    $("#video2").remove();
	                } else {
	                    $("#video2").attr('src', cacheVideo); //延时视频连接
	                }
	
	                /*轮播图*/
	                for (var i in img_url) {
	                    var template = "<div class='aui-slide-node bg-dark'><img src='" + YNZ + img_url[i] + "'/></div>";
	                    $(".slideWarp").append(template);
	                }
	
	                /*轮播*/
	                var slide = new auiSlide({
	                    container: document.getElementById("aui-slide"),
	                    // "width":300,
	                    "height": 250,
	                    "speed": 300,
	                    "pageShow": true,
	                    "autoPlay": 3000, //自动播放
	                    "pageStyle": 'dot',
	                    "loop": true,
	                    'dotPosition': 'center'
	                });
	
	                /*详情*/
	                $(".detail").append(goodsDesc);
	
	                /*规格，属性*/
	                var attrs = result['attrs'];
	                if (attrs.length == 0) {
	                    $(".attrs").remove();
	                } //如果没有属性，就删除属性按钮
	                for (var i in attrs) {
	                    var attrName = attrs[i]['attrName']; //属性名
	                    var attrVal = attrs[i]['attrVal']; //属性
	                    var exp = "<li class='aui-list-item'><div class='aui-list-item-inner'><div class='aui-list-item-label'>" + attrName + " :</div><div class='aui-list-item-input'>" + attrVal + "</div></div></li>";
	                    $(".attrsContent").append(exp);
	                }
	                console.log(attrs);
	
	                /*店铺电话*/
	                var shopTelDiv = "<a href='tel:" + shopTel + "' class='tel'></a>";
	                $(".phoneIconContent").append(shopTelDiv);
	            }
	        }
	    });
	
	    /* /!*解决视频安卓端透明问题*!/
	     var video1 = $("#video1");
	     window.myFunction=function() {
	         video1.css('visibility','hidden');
	     }*/
	});

/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * aui-slide.js 轮播组件
	 * @author 流浪男 && Beck
	 * http://www.auicss.com
	 * @todo more things to abstract, e.g. Loading css etc.
	 * Licensed under the MIT license.
	 * http://www.opensource.org/licenses/mit-license.php
	 */
	(function (window) {
		"use strict";
	
		var translateVal, firstTouchX, firstTouchY, touchXDelta, handleTranslateVal;
		var touchStartTime; //开始触摸事件
		var offsetX, offsetY, isScrolling;
		// CLASS 组装
		var CLASS_SLIDER_NODE = "aui-slide-node",
		    CLASS_SLIDE_PAGE_WRAP = "aui-slide-page-wrap",
		    CLASS_SLIDE_PAGE = "aui-slide-page",
		    CLASS_SLIDE_PAGE_ACTIVE = "aui-slide-page-active",
		    CLASS_SLIDE_PAGE_DOT = "aui-slide-page-dot",
		    CLASS_SLIDE_PAGE_LINE = "aui-slide-page-line";
	
		var __SLIDER_NODE = "." + CLASS_SLIDER_NODE,
		    __SLIDE_PAGE_WRAP = "." + CLASS_SLIDE_PAGE_WRAP,
		    __SLIDE_PAGE = "." + CLASS_SLIDE_PAGE,
		    __SLIDE_PAGE_ACTIVE = "." + CLASS_SLIDE_PAGE_ACTIVE;
	
		auiSlide.prototype.options = {
			container: '',
			width: 'auto',
			height: 'auto',
			speed: 300, //滑动速速
			autoPlay: 0, //自动播放
			pageShow: true, //是否显示分页器
			pageStyle: 'dot',
			dotPosition: 'center',
			friction: 1, //阻力
			loop: true,
			currentPage: false,
			PageCount: false
		};
		auiSlide.prototype._init = function (options) {
			extend(this.options, options);
			if (!this.options.container) {
				return;
			}
			this.index = 0; //索引值
			this.continuous = true; //用于判断长度为2时的特殊处理
			this.container = this.options.container;
			// console.log(this.options.loop);
			this.loop = this.options.loop;
			this.speed = this.options.speed;
			this.container.style.position = "relative";
			this.container.style.width = this.options.width + "px";
			this.container.style.height = this.options.height + "px";
	
			var element = this.container.children[0];
			this.slideWrap = element;
			this.slideNodeList = this.slideWrap.querySelectorAll(__SLIDER_NODE);
			if (!element || !this.slideNodeList) {
				return;
			}
			// this.options.pageCount(this.slideNodeList.length);
			this.slideWrapWidth = this.slideWrap.offsetWidth;
			this.slideNodeListLength = this.slideNodeList.length;
	
			if (this.slideNodeListLength == 2) {
				//当长度为2时作特殊处理
				element.appendChild(this.slideWrap.children[0].cloneNode(true));
				element.appendChild(this.slideWrap.children[1].cloneNode(true));
				this.slideWrap = element;
				this.slideNodeList = this.slideWrap.querySelectorAll(__SLIDER_NODE);
				this.slideNodeListLength = this.slideNodeList.length;
				this.continuous = false;
			}
			for (var i = 0; i < this.slideNodeListLength; i++) {
				this.slideNodeList[i] && (this.slideNodeList[i].style.webkitTransform = this.slideNodeList[i].style.transform = "translate3d(" + this.slideWrapWidth * i + "px,0,0)");
			}
	
			if (this.slideNodeListLength > 1) {
				if (this.options.pageShow) {
					this.createPagination(0);
					this.setPageDotPosition();
				}
				if (this.options.autoPlay > 500 && this.loop) {
					this.autoPlay(0);
				}
				this.slideWrap.addEventListener('touchstart', this.touchStart.bind(this), false);
				this.slideWrap.addEventListener('touchmove', this.touchMove.bind(this), false);
				this.slideWrap.addEventListener('touchend', this.touchEnd.bind(this), false);
			}
		};
		// 当分页器为圆点时位置设置
		auiSlide.prototype.setPageDotPosition = function () {
			var self = this;
			var pageDotPosition = self.options.dotPosition;
			this.container.querySelector(__SLIDE_PAGE_WRAP).style.textAlign = pageDotPosition;
		};
		// 自动播放
		auiSlide.prototype.autoPlay = function (index) {
			var self = this;
			setInterval(function () {
				self.slideTo(self.getCircle(self.index - 1), -self.slideWrapWidth, 0);
				self.slideTo(self.getCircle(self.index + 2), self.slideWrapWidth, 0);
				self.slideTo(self.index, -self.slideWrapWidth, self.options.speed);
				self.slideTo(self.getCircle(self.index + 1), 0, self.options.speed);
				self.index = self.getCircle(self.index + 1);
				self.setPaginationActive(self.index);
			}, self.options.autoPlay);
		};
		// 设置当前分页
		auiSlide.prototype.setPaginationActive = function (index) {
			var self = this;
			if (self.options.currentPage) {
				self.options.currentPage(index);
			}
			if (!this.container.querySelector(__SLIDE_PAGE_WRAP)) {
				return;
			}
			var pageList = this.container.querySelectorAll(__SLIDE_PAGE);
			if (this.container.querySelector(__SLIDE_PAGE + __SLIDE_PAGE_ACTIVE)) {
				this.container.querySelector(__SLIDE_PAGE + __SLIDE_PAGE_ACTIVE).classList.remove(CLASS_SLIDE_PAGE_ACTIVE);
			}
			if (!this.continuous) {
				if (this.index == 3) {
					pageList[1].classList.add(CLASS_SLIDE_PAGE_ACTIVE);
				} else if (this.index == 2) {
					pageList[0].classList.add(CLASS_SLIDE_PAGE_ACTIVE);
				} else {
					pageList[this.index].classList.add(CLASS_SLIDE_PAGE_ACTIVE);
				}
			} else {
				pageList[this.index].classList.add(CLASS_SLIDE_PAGE_ACTIVE);
			}
		};
		// 创建分页器
		auiSlide.prototype.createPagination = function (index) {
			var self = this;
			var pageWrap = this.container.querySelector(__SLIDE_PAGE_WRAP);
			if (!pageWrap) {
				return;
			}
			pageWrap.innerHTML = '';
			var pageShowHtml = '';
			switch (self.options.pageStyle) {
				case "dot":
					// 原点
					if (!this.continuous) {
						for (var i = 0; i < 2; i++) {
							pageShowHtml += '<span class="' + CLASS_SLIDE_PAGE + ' ' + CLASS_SLIDE_PAGE_DOT + '"></span>';
						}
					} else {
						for (var i = 0; i < this.slideNodeListLength; i++) {
							pageShowHtml += '<span class="' + CLASS_SLIDE_PAGE + ' ' + CLASS_SLIDE_PAGE_DOT + '"></span>';
						}
					}
					pageWrap.innerHTML = pageShowHtml;
					self.setPaginationActive(0);
					break;
				case "line":
					// 线条
					if (!this.continuous) {
						for (var i = 0; i < 2; i++) {
							pageShowHtml += '<span class="' + CLASS_SLIDE_PAGE + ' ' + CLASS_SLIDE_PAGE_LINE + '" style="width:50%"></span>';
						}
					} else {
						for (var i = 0; i < this.slideNodeListLength; i++) {
							pageShowHtml += '<span class="' + CLASS_SLIDE_PAGE + ' ' + CLASS_SLIDE_PAGE_LINE + '" style="width:' + 100 / this.slideNodeListLength + '%"></span>';
						}
					}
					pageWrap.innerHTML = pageShowHtml;
					self.setPaginationActive(0);
					break;
			}
		};
		// 总页数
		auiSlide.prototype.pageCount = function () {
			var self = this;
			return self.slideNodeList.length;
		};
		auiSlide.prototype.touchStart = function (event) {
			touchStartTime = new Date() * 1;
			firstTouchX = parseInt(event.changedTouches[0].pageX);
			firstTouchY = parseInt(event.changedTouches[0].pageY);
			isScrolling = undefined;
		};
		auiSlide.prototype.touchMove = function (event) {
			var touchMoveObj = event.changedTouches[0],
			    touchX = parseInt(touchMoveObj.pageX);
			touchXDelta = touchX - firstTouchX;
			handleTranslateVal = touchXDelta / this.options.friction;
			//  滑动位移
			offsetX = parseInt(touchMoveObj.pageX) - firstTouchX;
			offsetY = parseInt(touchMoveObj.pageY) - firstTouchY;
			var direction = this.getDirection(offsetX, offsetY);
			if (typeof isScrolling == 'undefined') {
				isScrolling = !!(isScrolling || Math.abs(offsetX) < Math.abs(offsetY));
			}
			if (!isScrolling) {
				event.preventDefault();
				if (!this.loop) {
					//不循环
					if (!this.continuous && this.index == 1 && direction == 'left') {
						return;
					}
					if (!this.continuous && this.index == 0 && direction == 'right') {
						return;
					}
					if (this.index == this.slideNodeList.length - 1) {
						if (handleTranslateVal <= 0) {
							return;
						}
						this.setTranslate(this.getCircle(this.index - 1), handleTranslateVal - this.slideWrapWidth, 0);
					} else if (this.index == 0) {
						if (handleTranslateVal >= 0) {
							return;
						}
						this.setTranslate(this.getCircle(this.index + 1), this.slideWrapWidth, 0);
					}
				}
	
				this.setTranslate(this.getCircle(this.index - 1), handleTranslateVal - this.slideWrapWidth, 0);
				this.setTranslate(this.index, handleTranslateVal, 0);
				this.setTranslate(this.getCircle(this.index + 1), handleTranslateVal + this.slideWrapWidth, 0);
			}
		};
		auiSlide.prototype.touchEnd = function (event) {
			var touchEndObj = event.changedTouches[0];
			var touchEndX = parseInt(touchEndObj.pageX) - firstTouchX;
			var touchEndY = parseInt(touchEndObj.pageY) - firstTouchY;
			var touchEndxy = {
				x: touchEndObj.pageX || 0,
				y: touchEndObj.pageY || 0
			};
			var moveDirection = this.getDirection(touchEndX, touchEndY); //滑动方向
			var boundary = this.slideWrapWidth / 4;
			var duration = new Date() * 1 - touchStartTime;
			var isValid = Number(duration) < 250 && Math.abs(offsetX) > 20 || Math.abs(offsetX) > boundary;
			if (isScrolling) {
				return;
			}
			if (isValid) {
				if (offsetX < 0) {
					if (!this.loop && this.index == this.slideNodeList.length - 1) {
						return;
					}
	
					if (!this.loop && !this.continuous && this.index == 1) {
						return;
					}
	
					if (offsetX < -boundary && moveDirection == 'left') {
						// left
						this.slideTo(this.getCircle(this.index - 1), -this.slideWrapWidth, 0);
						this.slideTo(this.getCircle(this.index + 2), this.slideWrapWidth, 0);
						this.slideTo(this.index, -this.slideWrapWidth, this.speed);
						this.slideTo(this.getCircle(this.index + 1), 0, this.speed);
						this.index = this.getCircle(this.index + 1);
					} else {
						// this.slideTo(this.getCircle(this.index-1), -this.slideWrapWidth, this.speed);
						this.slideTo(this.index, 0, this.speed);
						this.slideTo(this.getCircle(this.index + 1), this.slideWrapWidth, this.speed);
					}
				} else if (offsetX > 0) {
					if (!this.loop && this.index == 0) {
						return;
					}
					if (!this.loop && !this.continuous && this.index == 0) {
						return;
					}
					if (offsetX > boundary && moveDirection == 'right') {
						// right
						this.slideTo(this.getCircle(this.index + 1), this.slideWrapWidth, 0);
						this.slideTo(this.getCircle(this.index - 2), -this.slideWrapWidth, 0);
						this.slideTo(this.index, this.slideWrapWidth, this.speed);
						this.slideTo(this.getCircle(this.index - 1), 0, this.speed);
						this.index = this.getCircle(this.index - 1);
					} else {
						// this.slideTo(this.getCircle(this.index-1), -this.slideWrapWidth, this.speed);
						this.slideTo(this.index, 0, this.speed);
						this.slideTo(this.getCircle(this.index + 1), this.slideWrapWidth, this.speed);
					}
				}
			} else {
				if (offsetX) {
					this.slideTo(this.getCircle(this.index - 1), -this.slideWrapWidth, this.speed);
					this.slideTo(this.index, 0, this.speed);
					this.slideTo(this.getCircle(this.index + 1), this.slideWrapWidth, this.speed);
				}
			}
			this.setPaginationActive(this.index);
		};
		auiSlide.prototype.setTranslate = function (index, dist, speed) {
			if (this.slideNodeList[index]) {
				this.slideNodeList[index].style.webkitTransitionDuration = this.slideNodeList[index].style.transitionDuration = speed + 'ms';
				this.slideNodeList[index].style.webkitTransform = this.slideNodeList[index].style.transform = "translate3d(" + dist + "px,0,0)";
			}
		};
		auiSlide.prototype.slideTo = function (index, dist, speed) {
			this.setTranslate(index, dist, speed);
			// index = dist;
		};
		auiSlide.prototype.getCircle = function (index) {
			return (this.slideNodeListLength + index % this.slideNodeListLength) % this.slideNodeListLength;
		};
		auiSlide.prototype.getDirection = function (x, y) {
			if (x === y) {
				return '';
			}
			if (Math.abs(x) >= Math.abs(y)) {
				return x > 0 ? 'right' : 'left';
			} else {
				return y > 0 ? 'down' : 'up';
			}
		};
		function extend(a, b) {
			for (var key in b) {
				if (b.hasOwnProperty(key)) {
					a[key] = b[key];
				}
			}
			return a;
		}
		function auiSlide(options) {
			this._init(options);
		}
		window.auiSlide = auiSlide;
	})(window);

/***/ },
/* 15 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * aui-tab.js
	 * @author 流浪男
	 * @todo more things to abstract, e.g. Loading css etc.
	 * Licensed under the MIT license.
	 * http://www.opensource.org/licenses/mit-license.php
	 */
	(function (window, undefined) {
	    "use strict";
	
	    var auiTab = function auiTab(params, callback) {
	        this.extend(this.params, params);
	        this._init(callback);
	    };
	    var tabItems;
	    auiTab.prototype = {
	        params: {
	            element: false,
	            index: 1, //默认选中
	            repeatClick: false //是否允许重复点击
	        },
	        _init: function _init(callback) {
	            var self = this;
	            if (!self.params.element || self.params.element.nodeType != 1) {
	                return;
	            }
	            tabItems = self.params.element.children;
	            if (tabItems) {
	                self.setActive();
	                for (var i = 0; i < tabItems.length; i++) {
	                    tabItems[i].setAttribute("tapmode", "");
	                    tabItems[i].setAttribute("data-item-order", i);
	                    tabItems[i].onclick = function (e) {
	                        if (!self.params.repeatClick) {
	                            if (this.className.indexOf("aui-active") > -1) return;
	                        }
	                        if (callback) {
	                            callback({
	                                index: parseInt(this.getAttribute("data-item-order")) + 1,
	                                dom: this
	                            });
	                        };
	                        this.parentNode.querySelector(".aui-active").classList.remove("aui-active");
	                        this.classList.add("aui-active");
	                    };
	                }
	            }
	        },
	        setRepeat: function setRepeat(value) {
	            var self = this;
	            self.params.repeatClick = value ? value : false;
	        },
	        setActive: function setActive(index) {
	            var self = this;
	            index = index ? index : self.params.index;
	            var _tab = tabItems[index - 1];
	            if (_tab.parentNode.querySelector(".aui-active")) _tab.parentNode.querySelector(".aui-active").classList.remove("aui-active");
	            _tab.classList.add("aui-active");
	        },
	        extend: function extend(a, b) {
	            for (var key in b) {
	                if (b.hasOwnProperty(key)) {
	                    a[key] = b[key];
	                }
	            }
	            return a;
	        }
	    };
	    window.auiTab = auiTab;
	})(window);

/***/ },
/* 16 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * aui-popup.js
	 * @author 流浪男
	 * @todo more things to abstract, e.g. Loading css etc.
	 * Licensed under the MIT license.
	 * http://www.opensource.org/licenses/mit-license.php
	 */
	(function (window, undefined) {
	    "use strict";
	
	    var auiPopup = function auiPopup() {
	        this._init();
	    };
	    var CLASS_MASK = "aui-mask",
	        CLASS_MASK_IN = 'aui-mask-in',
	        CLASS_MASK_OUT = 'aui-mask-out',
	        CLASS_POPUP = 'aui-popup',
	        CLASS_POPUP_IN = 'aui-popup-in',
	        CLASS_POPUP_OUT = 'aui-popup-out',
	        CLASS_POPUP_FOR = 'aui-popup-for';
	    var __MASK = '.' + CLASS_MASK,
	        __MASK_IN = '.' + CLASS_MASK_IN,
	        __MASK_OUT = '.' + CLASS_MASK_OUT,
	        __POPUP = '.' + CLASS_POPUP,
	        __POPUP_IN = '.' + CLASS_POPUP_IN,
	        __POPUP_OUT = '.' + CLASS_POPUP_OUT;
	    var popupStatus = false;
	    auiPopup.prototype = {
	        _init: function _init() {
	            var self = this;
	            var _btn = document.querySelectorAll("[" + CLASS_POPUP_FOR + "]");
	            if (_btn) {
	                for (var i = 0; i < _btn.length; i++) {
	                    _btn[i].setAttribute("tapmode", "");
	                    _btn[i].onclick = function (e) {
	                        var popupId = this.getAttribute(CLASS_POPUP_FOR);
	                        var popupDom = document.getElementById(popupId);
	                        if (popupDom) {
	                            if (popupDom.className.indexOf(CLASS_POPUP_IN) > -1 || document.querySelector(__POPUP_IN)) {
	                                self.hide(popupDom);
	                            } else {
	                                self.show(popupDom);
	                            }
	                        } else {
	                            return;
	                        }
	                    };
	                }
	            }
	        },
	        show: function show(el) {
	            var self = this;
	            if (el.className.indexOf(CLASS_POPUP_IN) > -1 || document.querySelector(__POPUP_IN)) {
	                self.hide(el);
	                return;
	            }
	            if (popupStatus) return;
	            if (!document.querySelector(__MASK)) {
	                var maskHtml = '<div class="aui-mask"></div>';
	                document.body.insertAdjacentHTML('beforeend', maskHtml);
	            }
	            el.style.display = "block";
	            setTimeout(function () {
	                document.querySelector(__MASK).classList.add(CLASS_MASK_IN);
	                el.classList.add(CLASS_POPUP_IN);
	                popupStatus = true;
	            }, 10);
	            document.querySelector(__MASK).addEventListener("touchstart", function (event) {
	                event.preventDefault();
	                self.hide(el);
	            });
	            el.addEventListener("touchmove", function (event) {
	                event.preventDefault();
	            }, false);
	        },
	        hide: function hide(el) {
	            if (!popupStatus) return;
	            document.querySelector(__MASK).classList.remove(CLASS_MASK_IN);
	            document.querySelector(__MASK).classList.add(CLASS_MASK_OUT);
	            if (!document.querySelector(__POPUP_IN)) return;
	            document.querySelector(__POPUP_IN).classList.add(CLASS_POPUP_OUT);
	            document.querySelector(__POPUP_IN).classList.remove(CLASS_POPUP_IN);
	            setTimeout(function () {
	                if (!document.querySelector(__POPUP_OUT)) return;
	                document.querySelector(__POPUP_OUT).style.display = "none";
	                document.querySelector(__POPUP_OUT).classList.remove(CLASS_POPUP_OUT);
	                if (document.querySelector(__MASK)) {
	                    document.querySelector(__MASK).parentNode.removeChild(document.querySelector(__MASK));
	                }
	                popupStatus = false;
	            }, 300);
	        }
	    };
	    window.auiPopup = auiPopup;
	})(window);

/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * aui-popup.js
	 * @author 流浪男
	 * @todo more things to abstract, e.g. Loading css etc.
	 * Licensed under the MIT license.
	 * http://www.opensource.org/licenses/mit-license.php
	 */
	(function (window, undefined) {
	    "use strict";
	
	    var auiDialog = function auiDialog() {};
	    var isShow = false;
	    auiDialog.prototype = {
	        params: {
	            title: '',
	            msg: '',
	            buttons: ['取消', '确定'],
	            input: false
	        },
	        create: function create(params, callback) {
	            var self = this;
	            var dialogHtml = '';
	            var buttonsHtml = '';
	            var headerHtml = params.title ? '<div class="aui-dialog-header">' + params.title + '</div>' : '<div class="aui-dialog-header">' + self.params.title + '</div>';
	            if (params.input) {
	                params.text = params.text ? params.text : '';
	                var msgHtml = '<div class="aui-dialog-body"><input type="text" placeholder="' + params.text + '"></div>';
	            } else {
	                var msgHtml = params.msg ? '<div class="aui-dialog-body">' + params.msg + '</div>' : '<div class="aui-dialog-body">' + self.params.msg + '</div>';
	            }
	            var buttons = params.buttons ? params.buttons : self.params.buttons;
	            if (buttons && buttons.length > 0) {
	                for (var i = 0; i < buttons.length; i++) {
	                    buttonsHtml += '<div class="aui-dialog-btn" tapmode button-index="' + i + '">' + buttons[i] + '</div>';
	                }
	            }
	            var footerHtml = '<div class="aui-dialog-footer">' + buttonsHtml + '</div>';
	            dialogHtml = '<div class="aui-dialog">' + headerHtml + msgHtml + footerHtml + '</div>';
	            document.body.insertAdjacentHTML('beforeend', dialogHtml);
	            // listen buttons click
	            var dialogButtons = document.querySelectorAll(".aui-dialog-btn");
	            if (dialogButtons && dialogButtons.length > 0) {
	                for (var ii = 0; ii < dialogButtons.length; ii++) {
	                    dialogButtons[ii].onclick = function () {
	                        if (callback) {
	                            if (params.input) {
	                                callback({
	                                    buttonIndex: parseInt(this.getAttribute("button-index")) + 1,
	                                    text: document.querySelector("input").value
	                                });
	                            } else {
	                                callback({
	                                    buttonIndex: parseInt(this.getAttribute("button-index")) + 1
	                                });
	                            }
	                        };
	                        self.close();
	                        return;
	                    };
	                }
	            }
	            self.open();
	        },
	        open: function open() {
	            if (!document.querySelector(".aui-dialog")) return;
	            var self = this;
	            document.querySelector(".aui-dialog").style.marginTop = "-" + Math.round(document.querySelector(".aui-dialog").offsetHeight / 2) + "px";
	            if (!document.querySelector(".aui-mask")) {
	                var maskHtml = '<div class="aui-mask"></div>';
	                document.body.insertAdjacentHTML('beforeend', maskHtml);
	            }
	            // document.querySelector(".aui-dialog").style.display = "block";
	            setTimeout(function () {
	                document.querySelector(".aui-dialog").classList.add("aui-dialog-in");
	                document.querySelector(".aui-mask").classList.add("aui-mask-in");
	                document.querySelector(".aui-dialog").classList.add("aui-dialog-in");
	            }, 10);
	            document.querySelector(".aui-mask").addEventListener("touchmove", function (e) {
	                e.preventDefault();
	            });
	            document.querySelector(".aui-dialog").addEventListener("touchmove", function (e) {
	                e.preventDefault();
	            });
	            return;
	        },
	        close: function close() {
	            var self = this;
	            document.querySelector(".aui-mask").classList.remove("aui-mask-in");
	            document.querySelector(".aui-dialog").classList.remove("aui-dialog-in");
	            document.querySelector(".aui-dialog").classList.add("aui-dialog-out");
	            if (document.querySelector(".aui-dialog:not(.aui-dialog-out)")) {
	                setTimeout(function () {
	                    if (document.querySelector(".aui-dialog")) document.querySelector(".aui-dialog").parentNode.removeChild(document.querySelector(".aui-dialog"));
	                    self.open();
	                    return true;
	                }, 200);
	            } else {
	                document.querySelector(".aui-mask").classList.add("aui-mask-out");
	                document.querySelector(".aui-dialog").addEventListener("webkitTransitionEnd", function () {
	                    self.remove();
	                });
	                document.querySelector(".aui-dialog").addEventListener("transitionend", function () {
	                    self.remove();
	                });
	            }
	        },
	        remove: function remove() {
	            if (document.querySelector(".aui-dialog")) document.querySelector(".aui-dialog").parentNode.removeChild(document.querySelector(".aui-dialog"));
	            if (document.querySelector(".aui-mask")) {
	                document.querySelector(".aui-mask").classList.remove("aui-mask-out");
	            }
	            return true;
	        },
	        alert: function alert(params, callback) {
	            var self = this;
	            return self.create(params, callback);
	        },
	        prompt: function prompt(params, callback) {
	            var self = this;
	            params.input = true;
	            return self.create(params, callback);
	        }
	    };
	    window.auiDialog = auiDialog;
	})(window);

/***/ }
/******/ ]);
//# sourceMappingURL=Detail.min.js.map