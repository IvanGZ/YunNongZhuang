/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(24);
	module.exports = __webpack_require__(26);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 5 */,
/* 6 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*
	 * APICloud JavaScript Library
	 * Copyright (c) 2014 apicloud.com
	 */
	(function (window) {
	    var u = {};
	    var isAndroid = /android/gi.test(navigator.appVersion);
	    var uzStorage = function uzStorage() {
	        var ls = window.localStorage;
	        if (isAndroid) {
	            ls = os.localStorage();
	        }
	        return ls;
	    };
	    function parseArguments(url, data, fnSuc, dataType) {
	        if (typeof data == 'function') {
	            dataType = fnSuc;
	            fnSuc = data;
	            data = undefined;
	        }
	        if (typeof fnSuc != 'function') {
	            dataType = fnSuc;
	            fnSuc = undefined;
	        }
	        return {
	            url: url,
	            data: data,
	            fnSuc: fnSuc,
	            dataType: dataType
	        };
	    }
	    u.trim = function (str) {
	        if (String.prototype.trim) {
	            return str == null ? "" : String.prototype.trim.call(str);
	        } else {
	            return str.replace(/(^\s*)|(\s*$)/g, "");
	        }
	    };
	    u.trimAll = function (str) {
	        return str.replace(/\s*/g, '');
	    };
	    u.isElement = function (obj) {
	        return !!(obj && obj.nodeType == 1);
	    };
	    u.isArray = function (obj) {
	        if (Array.isArray) {
	            return Array.isArray(obj);
	        } else {
	            return obj instanceof Array;
	        }
	    };
	    u.isEmptyObject = function (obj) {
	        if (JSON.stringify(obj) === '{}') {
	            return true;
	        }
	        return false;
	    };
	    u.addEvt = function (el, name, fn, useCapture) {
	        if (!u.isElement(el)) {
	            console.warn('$api.addEvt Function need el param, el param must be DOM Element');
	            return;
	        }
	        useCapture = useCapture || false;
	        if (el.addEventListener) {
	            el.addEventListener(name, fn, useCapture);
	        }
	    };
	    u.rmEvt = function (el, name, fn, useCapture) {
	        if (!u.isElement(el)) {
	            console.warn('$api.rmEvt Function need el param, el param must be DOM Element');
	            return;
	        }
	        useCapture = useCapture || false;
	        if (el.removeEventListener) {
	            el.removeEventListener(name, fn, useCapture);
	        }
	    };
	    u.one = function (el, name, fn, useCapture) {
	        if (!u.isElement(el)) {
	            console.warn('$api.one Function need el param, el param must be DOM Element');
	            return;
	        }
	        useCapture = useCapture || false;
	        var that = this;
	        var cb = function cb() {
	            fn && fn();
	            that.rmEvt(el, name, cb, useCapture);
	        };
	        that.addEvt(el, name, cb, useCapture);
	    };
	    u.dom = function (el, selector) {
	        if (arguments.length === 1 && typeof arguments[0] == 'string') {
	            if (document.querySelector) {
	                return document.querySelector(arguments[0]);
	            }
	        } else if (arguments.length === 2) {
	            if (el.querySelector) {
	                return el.querySelector(selector);
	            }
	        }
	    };
	    u.domAll = function (el, selector) {
	        if (arguments.length === 1 && typeof arguments[0] == 'string') {
	            if (document.querySelectorAll) {
	                return document.querySelectorAll(arguments[0]);
	            }
	        } else if (arguments.length === 2) {
	            if (el.querySelectorAll) {
	                return el.querySelectorAll(selector);
	            }
	        }
	    };
	    u.byId = function (id) {
	        return document.getElementById(id);
	    };
	    u.first = function (el, selector) {
	        if (arguments.length === 1) {
	            if (!u.isElement(el)) {
	                console.warn('$api.first Function need el param, el param must be DOM Element');
	                return;
	            }
	            return el.children[0];
	        }
	        if (arguments.length === 2) {
	            return this.dom(el, selector + ':first-child');
	        }
	    };
	    u.last = function (el, selector) {
	        if (arguments.length === 1) {
	            if (!u.isElement(el)) {
	                console.warn('$api.last Function need el param, el param must be DOM Element');
	                return;
	            }
	            var children = el.children;
	            return children[children.length - 1];
	        }
	        if (arguments.length === 2) {
	            return this.dom(el, selector + ':last-child');
	        }
	    };
	    u.eq = function (el, index) {
	        return this.dom(el, ':nth-child(' + index + ')');
	    };
	    u.not = function (el, selector) {
	        return this.domAll(el, ':not(' + selector + ')');
	    };
	    u.prev = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.prev Function need el param, el param must be DOM Element');
	            return;
	        }
	        var node = el.previousSibling;
	        if (node.nodeType && node.nodeType === 3) {
	            node = node.previousSibling;
	            return node;
	        }
	    };
	    u.next = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.next Function need el param, el param must be DOM Element');
	            return;
	        }
	        var node = el.nextSibling;
	        if (node.nodeType && node.nodeType === 3) {
	            node = node.nextSibling;
	            return node;
	        }
	    };
	    u.closest = function (el, selector) {
	        if (!u.isElement(el)) {
	            console.warn('$api.closest Function need el param, el param must be DOM Element');
	            return;
	        }
	        var doms, targetDom;
	        var isSame = function isSame(doms, el) {
	            var i = 0,
	                len = doms.length;
	            for (i; i < len; i++) {
	                if (doms[i].isEqualNode(el)) {
	                    return doms[i];
	                }
	            }
	            return false;
	        };
	        var traversal = function traversal(el, selector) {
	            doms = u.domAll(el.parentNode, selector);
	            targetDom = isSame(doms, el);
	            while (!targetDom) {
	                el = el.parentNode;
	                if (el != null && el.nodeType == el.DOCUMENT_NODE) {
	                    return false;
	                }
	                traversal(el, selector);
	            }
	
	            return targetDom;
	        };
	
	        return traversal(el, selector);
	    };
	    u.contains = function (parent, el) {
	        var mark = false;
	        if (el === parent) {
	            mark = true;
	            return mark;
	        } else {
	            do {
	                el = el.parentNode;
	                if (el === parent) {
	                    mark = true;
	                    return mark;
	                }
	            } while (el === document.body || el === document.documentElement);
	
	            return mark;
	        }
	    };
	    u.remove = function (el) {
	        if (el && el.parentNode) {
	            el.parentNode.removeChild(el);
	        }
	    };
	    u.attr = function (el, name, value) {
	        if (!u.isElement(el)) {
	            console.warn('$api.attr Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length == 2) {
	            return el.getAttribute(name);
	        } else if (arguments.length == 3) {
	            el.setAttribute(name, value);
	            return el;
	        }
	    };
	    u.removeAttr = function (el, name) {
	        if (!u.isElement(el)) {
	            console.warn('$api.removeAttr Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 2) {
	            el.removeAttribute(name);
	        }
	    };
	    u.hasCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.hasCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (el.className.indexOf(cls) > -1) {
	            return true;
	        } else {
	            return false;
	        }
	    };
	    u.addCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.addCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if ('classList' in el) {
	            el.classList.add(cls);
	        } else {
	            var preCls = el.className;
	            var newCls = preCls + ' ' + cls;
	            el.className = newCls;
	        }
	        return el;
	    };
	    u.removeCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.removeCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if ('classList' in el) {
	            el.classList.remove(cls);
	        } else {
	            var preCls = el.className;
	            var newCls = preCls.replace(cls, '');
	            el.className = newCls;
	        }
	        return el;
	    };
	    u.toggleCls = function (el, cls) {
	        if (!u.isElement(el)) {
	            console.warn('$api.toggleCls Function need el param, el param must be DOM Element');
	            return;
	        }
	        if ('classList' in el) {
	            el.classList.toggle(cls);
	        } else {
	            if (u.hasCls(el, cls)) {
	                u.removeCls(el, cls);
	            } else {
	                u.addCls(el, cls);
	            }
	        }
	        return el;
	    };
	    u.val = function (el, val) {
	        if (!u.isElement(el)) {
	            console.warn('$api.val Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 1) {
	            switch (el.tagName) {
	                case 'SELECT':
	                    var value = el.options[el.selectedIndex].value;
	                    return value;
	                    break;
	                case 'INPUT':
	                    return el.value;
	                    break;
	                case 'TEXTAREA':
	                    return el.value;
	                    break;
	            }
	        }
	        if (arguments.length === 2) {
	            switch (el.tagName) {
	                case 'SELECT':
	                    el.options[el.selectedIndex].value = val;
	                    return el;
	                    break;
	                case 'INPUT':
	                    el.value = val;
	                    return el;
	                    break;
	                case 'TEXTAREA':
	                    el.value = val;
	                    return el;
	                    break;
	            }
	        }
	    };
	    u.prepend = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.prepend Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('afterbegin', html);
	        return el;
	    };
	    u.append = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.append Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('beforeend', html);
	        return el;
	    };
	    u.before = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.before Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('beforebegin', html);
	        return el;
	    };
	    u.after = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.after Function need el param, el param must be DOM Element');
	            return;
	        }
	        el.insertAdjacentHTML('afterend', html);
	        return el;
	    };
	    u.html = function (el, html) {
	        if (!u.isElement(el)) {
	            console.warn('$api.html Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 1) {
	            return el.innerHTML;
	        } else if (arguments.length === 2) {
	            el.innerHTML = html;
	            return el;
	        }
	    };
	    u.text = function (el, txt) {
	        if (!u.isElement(el)) {
	            console.warn('$api.text Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 1) {
	            return el.textContent;
	        } else if (arguments.length === 2) {
	            el.textContent = txt;
	            return el;
	        }
	    };
	    u.offset = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.offset Function need el param, el param must be DOM Element');
	            return;
	        }
	        var sl = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);
	        var st = Math.max(document.documentElement.scrollTop, document.body.scrollTop);
	
	        var rect = el.getBoundingClientRect();
	        return {
	            l: rect.left + sl,
	            t: rect.top + st,
	            w: el.offsetWidth,
	            h: el.offsetHeight
	        };
	    };
	    u.css = function (el, css) {
	        if (!u.isElement(el)) {
	            console.warn('$api.css Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (typeof css == 'string' && css.indexOf(':') > 0) {
	            el.style && (el.style.cssText += ';' + css);
	        }
	    };
	    u.cssVal = function (el, prop) {
	        if (!u.isElement(el)) {
	            console.warn('$api.cssVal Function need el param, el param must be DOM Element');
	            return;
	        }
	        if (arguments.length === 2) {
	            var computedStyle = window.getComputedStyle(el, null);
	            return computedStyle.getPropertyValue(prop);
	        }
	    };
	    u.jsonToStr = function (json) {
	        if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object') {
	            return JSON && JSON.stringify(json);
	        }
	    };
	    u.strToJson = function (str) {
	        if (typeof str === 'string') {
	            return JSON && JSON.parse(str);
	        }
	    };
	    u.setStorage = function (key, value) {
	        if (arguments.length === 2) {
	            var v = value;
	            if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) == 'object') {
	                v = JSON.stringify(v);
	                v = 'obj-' + v;
	            } else {
	                v = 'str-' + v;
	            }
	            var ls = uzStorage();
	            if (ls) {
	                ls.setItem(key, v);
	            }
	        }
	    };
	    u.getStorage = function (key) {
	        var ls = uzStorage();
	        if (ls) {
	            var v = ls.getItem(key);
	            if (!v) {
	                return;
	            }
	            if (v.indexOf('obj-') === 0) {
	                v = v.slice(4);
	                return JSON.parse(v);
	            } else if (v.indexOf('str-') === 0) {
	                return v.slice(4);
	            }
	        }
	    };
	    u.rmStorage = function (key) {
	        var ls = uzStorage();
	        if (ls && key) {
	            ls.removeItem(key);
	        }
	    };
	    u.clearStorage = function () {
	        var ls = uzStorage();
	        if (ls) {
	            ls.clear();
	        }
	    };
	
	    /*by king*/
	    u.fixIos7Bar = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.fixIos7Bar Function need el param, el param must be DOM Element');
	            return;
	        }
	        var strDM = api.systemType;
	        if (strDM == 'ios') {
	            var strSV = api.systemVersion;
	            var numSV = parseInt(strSV, 10);
	            var fullScreen = api.fullScreen;
	            var iOS7StatusBarAppearance = api.iOS7StatusBarAppearance;
	            if (numSV >= 7 && !fullScreen && iOS7StatusBarAppearance) {
	                el.style.paddingTop = '20px';
	            }
	        }
	    };
	    u.fixStatusBar = function (el) {
	        if (!u.isElement(el)) {
	            console.warn('$api.fixStatusBar Function need el param, el param must be DOM Element');
	            return;
	        }
	        var sysType = api.systemType;
	        if (sysType == 'ios') {
	            u.fixIos7Bar(el);
	        } else if (sysType == 'android') {
	            var ver = api.systemVersion;
	            ver = parseFloat(ver);
	            if (ver >= 4.4) {
	                el.style.paddingTop = '25px';
	            }
	        }
	    };
	    u.toast = function (title, text, time) {
	        var opts = {};
	        var show = function show(opts, time) {
	            api.showProgress(opts);
	            setTimeout(function () {
	                api.hideProgress();
	            }, time);
	        };
	        if (arguments.length === 1) {
	            var time = time || 500;
	            if (typeof title === 'number') {
	                time = title;
	            } else {
	                opts.title = title + '';
	            }
	            show(opts, time);
	        } else if (arguments.length === 2) {
	            var time = time || 500;
	            var text = text;
	            if (typeof text === "number") {
	                var tmp = text;
	                time = tmp;
	                text = null;
	            }
	            if (title) {
	                opts.title = title;
	            }
	            if (text) {
	                opts.text = text;
	            }
	            show(opts, time);
	        }
	        if (title) {
	            opts.title = title;
	        }
	        if (text) {
	            opts.text = text;
	        }
	        time = time || 500;
	        show(opts, time);
	    };
	    u.post = function () /*url,data,fnSuc,dataType*/{
	        var argsToJson = parseArguments.apply(null, arguments);
	        var json = {};
	        var fnSuc = argsToJson.fnSuc;
	        argsToJson.url && (json.url = argsToJson.url);
	        argsToJson.data && (json.data = argsToJson.data);
	        if (argsToJson.dataType) {
	            var type = argsToJson.dataType.toLowerCase();
	            if (type == 'text' || type == 'json') {
	                json.dataType = type;
	            }
	        } else {
	            json.dataType = 'json';
	        }
	        json.method = 'post';
	        api.ajax(json, function (ret, err) {
	            if (ret) {
	                fnSuc && fnSuc(ret);
	            }
	        });
	    };
	    u.get = function () /*url,fnSuc,dataType*/{
	        var argsToJson = parseArguments.apply(null, arguments);
	        var json = {};
	        var fnSuc = argsToJson.fnSuc;
	        argsToJson.url && (json.url = argsToJson.url);
	        //argsToJson.data && (json.data = argsToJson.data);
	        if (argsToJson.dataType) {
	            var type = argsToJson.dataType.toLowerCase();
	            if (type == 'text' || type == 'json') {
	                json.dataType = type;
	            }
	        } else {
	            json.dataType = 'text';
	        }
	        json.method = 'get';
	        api.ajax(json, function (ret, err) {
	            if (ret) {
	                fnSuc && fnSuc(ret);
	            }
	        });
	    };
	
	    /*end*/
	
	    window.$api = u;
	})(window);

/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Created by a123 on 17/2/13.
	 */
	
	/*url*/
	// YNZapi = 'http://nz.lekongyun.com/Shop/api';
	//YNZ = 'http://nz.lekongyun.com';
	var YNZapi = 'http://ynz.lekongyun.com/api';
	var YNZ = 'http://ynz.lekongyun.com/';
	/*cookies*/
	function getCookie(cname) {
	    var name = cname + "=";
	    var ca = document.cookie.split(';');
	    for (var i = 0; i < ca.length; i++) {
	        var c = ca[i];
	        while (c.charAt(0) == ' ') {
	            c = c.substring(1);
	        }if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
	    }
	    return "";
	}
	
	module.exports = {
	    getCookie: getCookie,
	    YNZapi: YNZapi,
	    YNZ: YNZ
	};

/***/ },
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * aui-popup.js
	 * @author 流浪男
	 * @todo more things to abstract, e.g. Loading css etc.
	 * Licensed under the MIT license.
	 * http://www.opensource.org/licenses/mit-license.php
	 */
	(function (window, undefined) {
	    "use strict";
	
	    var auiPopup = function auiPopup() {
	        this._init();
	    };
	    var CLASS_MASK = "aui-mask",
	        CLASS_MASK_IN = 'aui-mask-in',
	        CLASS_MASK_OUT = 'aui-mask-out',
	        CLASS_POPUP = 'aui-popup',
	        CLASS_POPUP_IN = 'aui-popup-in',
	        CLASS_POPUP_OUT = 'aui-popup-out',
	        CLASS_POPUP_FOR = 'aui-popup-for';
	    var __MASK = '.' + CLASS_MASK,
	        __MASK_IN = '.' + CLASS_MASK_IN,
	        __MASK_OUT = '.' + CLASS_MASK_OUT,
	        __POPUP = '.' + CLASS_POPUP,
	        __POPUP_IN = '.' + CLASS_POPUP_IN,
	        __POPUP_OUT = '.' + CLASS_POPUP_OUT;
	    var popupStatus = false;
	    auiPopup.prototype = {
	        _init: function _init() {
	            var self = this;
	            var _btn = document.querySelectorAll("[" + CLASS_POPUP_FOR + "]");
	            if (_btn) {
	                for (var i = 0; i < _btn.length; i++) {
	                    _btn[i].setAttribute("tapmode", "");
	                    _btn[i].onclick = function (e) {
	                        var popupId = this.getAttribute(CLASS_POPUP_FOR);
	                        var popupDom = document.getElementById(popupId);
	                        if (popupDom) {
	                            if (popupDom.className.indexOf(CLASS_POPUP_IN) > -1 || document.querySelector(__POPUP_IN)) {
	                                self.hide(popupDom);
	                            } else {
	                                self.show(popupDom);
	                            }
	                        } else {
	                            return;
	                        }
	                    };
	                }
	            }
	        },
	        show: function show(el) {
	            var self = this;
	            if (el.className.indexOf(CLASS_POPUP_IN) > -1 || document.querySelector(__POPUP_IN)) {
	                self.hide(el);
	                return;
	            }
	            if (popupStatus) return;
	            if (!document.querySelector(__MASK)) {
	                var maskHtml = '<div class="aui-mask"></div>';
	                document.body.insertAdjacentHTML('beforeend', maskHtml);
	            }
	            el.style.display = "block";
	            setTimeout(function () {
	                document.querySelector(__MASK).classList.add(CLASS_MASK_IN);
	                el.classList.add(CLASS_POPUP_IN);
	                popupStatus = true;
	            }, 10);
	            document.querySelector(__MASK).addEventListener("touchstart", function (event) {
	                event.preventDefault();
	                self.hide(el);
	            });
	            el.addEventListener("touchmove", function (event) {
	                event.preventDefault();
	            }, false);
	        },
	        hide: function hide(el) {
	            if (!popupStatus) return;
	            document.querySelector(__MASK).classList.remove(CLASS_MASK_IN);
	            document.querySelector(__MASK).classList.add(CLASS_MASK_OUT);
	            if (!document.querySelector(__POPUP_IN)) return;
	            document.querySelector(__POPUP_IN).classList.add(CLASS_POPUP_OUT);
	            document.querySelector(__POPUP_IN).classList.remove(CLASS_POPUP_IN);
	            setTimeout(function () {
	                if (!document.querySelector(__POPUP_OUT)) return;
	                document.querySelector(__POPUP_OUT).style.display = "none";
	                document.querySelector(__POPUP_OUT).classList.remove(CLASS_POPUP_OUT);
	                if (document.querySelector(__MASK)) {
	                    document.querySelector(__MASK).parentNode.removeChild(document.querySelector(__MASK));
	                }
	                popupStatus = false;
	            }, 300);
	        }
	    };
	    window.auiPopup = auiPopup;
	})(window);

/***/ },
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(25);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../node_modules/.0.26.2@css-loader/index.js?sourceMap!./Order.css", function() {
				var newContent = require("!!../node_modules/.0.26.2@css-loader/index.js?sourceMap!./Order.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports
	
	
	// module
	exports.push([module.id, "body{font-family: \"Microsoft YaHei UI\";padding-bottom: 50px;}\n/*头部*/\n.header{position: fixed;top:0;z-index: 5;background: #f8f8f8}\n.empty{height: 2.25rem;}\n.bar{width: 100%;opacity:0.8;}\n.addressIcon{font-size: 20px!important;}\n/*订单*/\n.orderHeader{height: 45px;line-height: 45px!important;font-size: .7rem!important;padding: 0!important;background: white!important;}\n.Icon{float: left;margin: 10px;}\n.goodsList{background: #f5f5f5!important;}\n.pay{color: orangered !important;}\n.img_url{height: 70px!important;width: 75px!important;}\n.Amount{text-shadow: none!important;text-transform: none!important;}\n/*订购数量*/\n.orderNum{width: 3.2rem}\n.num{width: 100px!important;}\n/*底部*/\n.rmb{color: orangered;}\n.submit{color: #ffffff !important;background-color: #9ccc65 !important;height: 44px;line-height: 44px;margin-top: 2px;padding: 0 20px;border-radius: 0}\n.submit:active {color: #ffffff !important;background-color: #9ccc65 !important;}\n.submitContent{padding-right: 0!important;}\n/*弹出层*/\n.aui-popup-content{border-radius: 0!important;}\n.titleIcon{width: 22px;}\n.money{text-align: center;font-size: 1.4rem;font-weight: bold;line-height: 44px;}\n.money:after{height: 0!important;}\n.liTitle{padding: 0!important;text-align: center;font-size: .8rem!important;line-height: 44px!important;}\n#bottom{width: 100%;left:0;bottom: 0;margin-left: 0;}\n.orderLeft{color: #999;}\n.lastItem{padding-bottom: 80px!important;}\n.sum{color: orangered;font-size: 1rem;}\n.goodsPay{color: orangered!important;}\n.paymentIcon{width: 22px;float: left;margin-right: 10px;}\n.payMoneyBefore{background: #e0e0e0;color: #999;}\n.payMoneyBefore:active{background: #e0e0e0;color: #999;}\n.payMoneyAfter{background: #9ccc65;color: white;}\n.payMoneyAfter:active{background: #9ccc65;color: white;}\n\n", "", {"version":3,"sources":["/./Order/Order.css"],"names":[],"mappings":"AAAA,KAAK,kCAAkC,qBAAqB,CAAC;AAC7D,MAAM;AACN,QAAQ,gBAAgB,MAAM,WAAW,mBAAmB,CAAC;AAC7D,OAAO,gBAAgB,CAAC;AACxB,KAAK,YAAY,YAAY,CAAC;AAC9B,aAAa,0BAA0B,CAAC;AACxC,MAAM;AACN,aAAa,aAAa,4BAA4B,2BAA2B,qBAAqB,4BAA4B,CAAC;AACnI,MAAM,YAAY,aAAa,CAAC;AAChC,WAAW,8BAA8B,CAAC;AAC1C,KAAK,4BAA4B,CAAC;AAClC,SAAS,uBAAuB,sBAAsB,CAAC;AACvD,QAAQ,4BAA4B,+BAA+B,CAAC;AACpE,QAAQ;AACR,UAAU,aAAa,CAAC;AACxB,KAAK,uBAAuB,CAAC;AAC7B,MAAM;AACN,KAAK,iBAAiB,CAAC;AACvB,QAAQ,0BAA0B,qCAAqC,aAAa,kBAAkB,gBAAgB,gBAAgB,gBAAgB,CAAC;AACvJ,gBAAgB,0BAA0B,qCAAqC,CAAC;AAChF,eAAe,2BAA2B,CAAC;AAC3C,OAAO;AACP,mBAAmB,2BAA2B,CAAC;AAC/C,WAAW,YAAY,CAAC;AACxB,OAAO,mBAAmB,kBAAkB,kBAAkB,kBAAkB,CAAC;AACjF,aAAa,oBAAoB,CAAC;AAClC,SAAS,qBAAqB,mBAAmB,2BAA2B,4BAA4B,CAAC;AACzG,QAAQ,YAAY,OAAO,UAAU,eAAe,CAAC;AACrD,WAAW,YAAY,CAAC;AACxB,UAAU,+BAA+B,CAAC;AAC1C,KAAK,iBAAiB,gBAAgB,CAAC;AACvC,UAAU,2BAA2B,CAAC;AACtC,aAAa,YAAY,YAAY,mBAAmB,CAAC;AACzD,gBAAgB,oBAAoB,YAAY,CAAC;AACjD,uBAAuB,oBAAoB,YAAY,CAAC;AACxD,eAAe,oBAAoB,aAAa,CAAC;AACjD,sBAAsB,oBAAoB,aAAa,CAAC","file":"Order.css","sourcesContent":["body{font-family: \"Microsoft YaHei UI\";padding-bottom: 50px;}\n/*头部*/\n.header{position: fixed;top:0;z-index: 5;background: #f8f8f8}\n.empty{height: 2.25rem;}\n.bar{width: 100%;opacity:0.8;}\n.addressIcon{font-size: 20px!important;}\n/*订单*/\n.orderHeader{height: 45px;line-height: 45px!important;font-size: .7rem!important;padding: 0!important;background: white!important;}\n.Icon{float: left;margin: 10px;}\n.goodsList{background: #f5f5f5!important;}\n.pay{color: orangered !important;}\n.img_url{height: 70px!important;width: 75px!important;}\n.Amount{text-shadow: none!important;text-transform: none!important;}\n/*订购数量*/\n.orderNum{width: 3.2rem}\n.num{width: 100px!important;}\n/*底部*/\n.rmb{color: orangered;}\n.submit{color: #ffffff !important;background-color: #9ccc65 !important;height: 44px;line-height: 44px;margin-top: 2px;padding: 0 20px;border-radius: 0}\n.submit:active {color: #ffffff !important;background-color: #9ccc65 !important;}\n.submitContent{padding-right: 0!important;}\n/*弹出层*/\n.aui-popup-content{border-radius: 0!important;}\n.titleIcon{width: 22px;}\n.money{text-align: center;font-size: 1.4rem;font-weight: bold;line-height: 44px;}\n.money:after{height: 0!important;}\n.liTitle{padding: 0!important;text-align: center;font-size: .8rem!important;line-height: 44px!important;}\n#bottom{width: 100%;left:0;bottom: 0;margin-left: 0;}\n.orderLeft{color: #999;}\n.lastItem{padding-bottom: 80px!important;}\n.sum{color: orangered;font-size: 1rem;}\n.goodsPay{color: orangered!important;}\n.paymentIcon{width: 22px;float: left;margin-right: 10px;}\n.payMoneyBefore{background: #e0e0e0;color: #999;}\n.payMoneyBefore:active{background: #e0e0e0;color: #999;}\n.payMoneyAfter{background: #9ccc65;color: white;}\n.payMoneyAfter:active{background: #9ccc65;color: white;}\n\n"],"sourceRoot":"webpack://"}]);
	
	// exports


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	/**
	 * Created by a123 on 17/1/18.
	 */
	__webpack_require__(6);
	__webpack_require__(16); //弹出层
	var commom = __webpack_require__(7);
	
	var YNZapi = commom.YNZapi;
	var YNZ = commom.YNZ;
	/*获取openID*/
	var openid = commom.getCookie('openid');
	
	var areaId2 = void 0;
	var shopId = void 0;
	var shopPrice = void 0;
	var freight = void 0;
	
	var appId = void 0;
	var timeStamp = void 0;
	var nonceStr = void 0;
	var WXpackage = void 0;
	var signType = void 0;
	var paySign = void 0;
	
	/*function getFreight() {
	    if (areaId2 && shopId) {
	        $.ajax({
	            type:"GET",
	            url:YNZapi+"/Carts/getFreight",
	            headers:{'session':openid},
	            data:{
	                'areaId2':areaId2,
	                'shopId':shopId
	            },
	            dataType:"json",
	            success:function (data) {
	                if(data.code == 0){
	                     freight =  data.result;
	                    $(".freight").text("￥"+freight+"元")
	                }
	            }
	
	        })
	    }
	}*/
	
	$(document).ready(function () {
	    /*弹出层*/
	    var popup = new auiPopup();
	    function showPopup() {
	        popup.show(document.getElementById("bottom"));
	    }
	
	    /*处理前一个页面带的参数*/
	    function GetQueryString(name) {
	        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
	        var r = window.location.search.substr(1).match(reg);
	        if (r != null) return decodeURI(r[2]);return null;
	    }
	    var id = GetQueryString("id");
	    //alert(id);
	
	    /*/!*限制只能输入数字*!/
	    $(".numInput").keypress(function () {
	        var keyCode = event.keyCode;
	        if ((keyCode >= 48 && keyCode <= 57))
	        {
	            event.returnValue = true;
	        } else {
	            event.returnValue = false;
	        }
	    });*/
	
	    /*商品数量加减控件*/
	    $("#a").Spinner({ value: 1, min: 0, len: 2, max: 99 });
	
	    //alert(openid);
	    /*获取默认地址*/
	    var addressId = '';
	    $.ajax({
	        type: 'GET',
	        url: YNZapi + '/address',
	        headers: { 'session': openid },
	        dataType: 'json',
	        async: false,
	        success: function success(data) {
	            if (data.code == 0) {
	                var result = data.result;
	                console.log(result);
	                if (result.length == 0) {
	                    $(".addressContent").html("<div class='aui-card-list-header'><span class='aui-text-warning'>! 请到个人管理里填写收件地址</span><div class='aui-btn aui-btn-warning address'>去管理</div></div>");
	                    $(".address").on('click', function () {
	                        window.location.href = '../personalProfile/DeliveryAddress/DeliveryAddress.html';
	                    });
	                } else if (result.length != 0) {
	                    var def_address = '';
	                    for (var i in result) {
	                        if (result[i].isDefault == 1) {
	                            def_address = result[i];
	                        }
	                    }
	                    if (def_address != '') {
	                        addressId = def_address['addressId'];
	                        $(".userName").text(def_address.userName);
	                        $(".userPhone").text(def_address.userPhone);
	                        $(".userAddress").text(def_address.userAddress);
	                        areaId2 = def_address.areaId2;
	                        getFreight();
	                    } else {
	                        $(".addressContent").html("<div class='aui-card-list-header'><span class='aui-text-warning'>! 请选择默认收件地址</span><div class='aui-btn aui-btn-warning address'>去管理</div></div>");
	                        $(".address").on('click', function () {
	                            window.location.href = '../personalProfile/DeliveryAddress/DeliveryAddress.html';
	                        });
	                    }
	                }
	            }
	        }
	
	    });
	
	    /*获取订单信息*/
	    $.ajax({
	        type: 'GET',
	        url: YNZapi + '/Carts/nowbuy',
	        data: {
	            'goodsId': id
	        },
	        async: false,
	        headers: { 'session': openid },
	        dataType: 'json',
	        success: function success(data) {
	            if (data.code == 0) {
	                var result = data.result;
	                //console.log(result);
	
	                shopId = result['shopId']; //店铺ID
	                var shopName = result['shopName']; //店铺名称
	
	                var goodsid = result['goodsId']; //商品ID
	                shopPrice = Number(result['shopPrice']); //价格
	                window.shopPrice = shopPrice;
	                var goods_name = result['goodsName']; //商品名字
	                var img_url = YNZ + result['goodsImg']; //图片
	                var goodsStock = result['goodsStock']; //库存
	                var goodsUnit = result['goodsUnit']; //库存单位
	
	                $(".name").text(shopName);
	                $(".shopPrice").text(shopPrice + "每" + goodsUnit);
	                /* $(".money").text("￥"+shopPrice);//订单合计
	                 $(".sum").text(shopPrice); //合计*/
	                $(".goods_name").text(goods_name);
	                $(".img_url").attr('src', img_url);
	                /*$(".goodsStock").text(goodsStock + goodsUnit);*/
	                $(".goodsUnit").text(goodsUnit);
	
	                getFreight();
	            }
	        }
	    });
	
	    /*运费*/
	    function getFreight() {
	        if (areaId2 && shopId) {
	            $.ajax({
	                type: "GET",
	                url: YNZapi + "/Carts/getFreight",
	                headers: { 'session': openid },
	                data: {
	                    'areaId2': areaId2,
	                    'shopId': shopId
	                },
	                async: false,
	                dataType: "json",
	                success: function success(data) {
	                    if (data.code == 0) {
	                        freight = Number(data.result);
	                        $(".freight").text("￥" + freight + "元");
	                        var total = shopPrice + freight;
	                        total.toFixed(2);
	                        $(".sum").text(total); //合计
	                        $(".money").text("￥" + total); //订单合计
	                    }
	                }
	            });
	        }
	    }
	
	    /*添加订单*/
	    var orderNo = '';
	    $(".submit").on('click', function () {
	        /*判断是否有默认地址*/
	        if (addressId == '') {
	            alert('请到个人管理填写默认地址');
	            return false;
	        }
	        var num = $(".numInput").val();
	        $.ajax({
	            type: 'POST',
	            url: YNZapi + '/order',
	            data: {
	                'addressId': addressId,
	                'goodsId': id,
	                'buyNum': num
	
	            },
	            async: false,
	            headers: { 'session': openid },
	            dataType: 'json',
	            success: function success(data) {
	                if (data.code == 0) {
	                    orderNo = data.result;
	                    $(".orderInfo").text(orderNo);
	                    getOrderId(orderNo);
	                }
	            }
	        });
	    });
	
	    /*合计*/
	    /*不可编辑*/
	    /*$(".numInput").attr('disabled','true');*/
	    /*减*/
	    $(".Decrease").on('click', function () {
	        sum();
	    });
	    /*加*/
	    $(".Increase").on('click', function () {
	        sum();
	    });
	    /*输入*/
	    $('.numInput').on('input', function () {
	        sum();
	    });
	    function sum() {
	        var num = $(".numInput").val(); //数量
	        var sum = num * window.shopPrice; //总价
	        var total = sum + freight; //加运费
	        total.toFixed(2);
	        $(".sum").text(total);
	        $(".money").text("￥" + total);
	    }
	
	    /*支付*/
	    var orderId = '';
	    function getOrderId(a) {
	        //console.log("intoGetOrderId");
	        if (a != '') {
	            $.ajax({
	                type: 'GET',
	                data: { 'orderNo': a },
	                url: YNZapi + '/order/succeed',
	                dataType: 'json',
	                headers: { 'session': openid },
	                async: false,
	                success: function success(data) {
	                    if (data.code == 0) {
	                        var list = data.result.list;
	                        for (var i in list) {
	                            var orderId = list[i]['orderId'];
	                            break;
	                        }
	                        WXPay(orderId);
	                    }
	                }
	            });
	        }
	    }
	
	    function WXPay(orderId) {
	        console.log("intoWXPay");
	        $.ajax({
	            type: 'GET',
	            data: { 'id': orderId },
	            url: YNZapi + '/Weixinpays/getWxPaysPrm',
	            dataType: 'json',
	            headers: { 'session': openid },
	            success: function success(data) {
	                console.log('debug api', data);
	                if (data.code == 0) {
	                    //console.log(data);
	                    var result = data.result;
	                    result = $.parseJSON(result);
	                    //console.log(result);
	                    appId = result['appId'];
	                    nonceStr = result['nonceStr'];
	                    timeStamp = result['timeStamp'];
	                    WXpackage = result['package'];
	                    signType = result['signType'];
	                    paySign = result['paySign'];
	
	                    $(".payMoney").removeClass("payMoneyBefore").addClass("payMoneyAfter");
	                    $(".payMoney").text("立即支付");
	                }
	            }
	        });
	    }
	});
	
	$(document).on('WeixinJSBridgeReady', function () {
	    //console.log('WeixinJSBridgeReady!!');
	    $(document).on('click', ".payMoney", function () {
	        WeixinJSBridge.invoke('getBrandWCPayRequest', {
	            "appId": appId, //公众号名称，由商户传入
	            "timeStamp": timeStamp, //时间戳，自1970年以来的秒数
	            "nonceStr": nonceStr, //随机串
	            "package": WXpackage,
	            "signType": signType, //微信签名方式：
	            "paySign": paySign //微信签名
	        }, function (res) {
	            console.log(res);
	            // WeixinJSBridge.log(res.err_msg);
	            //alert(res.err_code+res.err_desc+res.err_msg);
	            // sessionStorage.setItem("back",2);
	            // window.location.href = '../index.html'
	        });
	    });
	});

/***/ }
/******/ ]);
//# sourceMappingURL=Order.min.js.map